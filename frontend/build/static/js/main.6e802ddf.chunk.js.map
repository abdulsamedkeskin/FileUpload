{"version":3,"sources":["components/UploadPage.js","components/DownloadPage.js","App.js","reportWebVitals.js","index.js"],"names":["UploadPage","useState","totalSize","setTotalSize","progress","setProgress","link","setLink","copyMessage","setCopyMessage","toast","useRef","fileUploadRef","onTemplateClear","ref","target","content","position","className","name","url","auto","customUpload","uploadHandler","e","config","headers","onUploadProgress","data","Math","round","loaded","total","formData","FormData","append","files","axios","post","then","res","current","show","severity","summary","detail","catch","err","String","accept","maxFileSize","onSelect","_totalSize","size","onError","onClear","headerTemplate","options","chooseButton","style","backgroundColor","display","alignItems","value","displayValueTemplate","width","height","marginLeft","itemTemplate","file","props","Date","toLocaleDateString","formatSize","type","icon","onClick","callback","onTemplateRemove","onRemove","emptyTemplate","fontSize","borderRadius","color","chooseOptions","iconOnly","navigator","clipboard","writeText","window","location","href","split","marginTop","DownloadPage","file_name","useParams","setData","useEffect","get","method","responseType","response","FileDownload","App","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6e802ddf.chunk.js","sourcesContent":["import \"primeicons/primeicons.css\";\r\nimport \"primereact/resources/themes/saga-blue/theme.css\";\r\nimport \"primereact/resources/primereact.css\";\r\nimport \"primeflex/primeflex.css\";\r\nimport React, { useRef, useState } from \"react\";\r\nimport { Toast } from \"primereact/toast\";\r\nimport { FileUpload } from \"primereact/fileupload\";\r\nimport { ProgressBar } from \"primereact/progressbar\";\r\nimport { Button } from \"primereact/button\";\r\nimport { Tooltip } from \"primereact/tooltip\";\r\nimport { Tag } from \"primereact/tag\";\r\nimport axios from \"axios\";\r\n\r\nconst UploadPage = () => {\r\n  const [totalSize, setTotalSize] = useState(0);\r\n  const [progress, setProgress] = useState(0);\r\n  const [link, setLink] = useState(null);\r\n  const [copyMessage, setCopyMessage] = useState(\"Copy Link\");\r\n  const toast = useRef(null);\r\n  const fileUploadRef = useRef(null);\r\n\r\n  const onTemplateSelect = (e) => {\r\n    let _totalSize = totalSize;\r\n    _totalSize += e.files[0].size;\r\n    setTotalSize(_totalSize);\r\n  };\r\n\r\n  const onTemplateRemove = (file, callback) => {\r\n    setTotalSize(totalSize - file.size);\r\n    setProgress(0);\r\n    callback();\r\n  };\r\n\r\n  const onTemplateClear = () => {\r\n    setTotalSize(0);\r\n  };\r\n\r\n  const headerTemplate = (options) => {\r\n    const { className, chooseButton } = options;\r\n\r\n    return (\r\n      <div\r\n        className={className}\r\n        style={{\r\n          backgroundColor: \"transparent\",\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        {chooseButton}\r\n        <ProgressBar\r\n          value={progress}\r\n          displayValueTemplate={() => `%${progress}`}\r\n          style={{ width: \"300px\", height: \"20px\", marginLeft: \"auto\" }}\r\n        />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const itemTemplate = (file, props) => {\r\n    return (\r\n      <div className=\"p-d-flex p-ai-center p-flex-wrap\">\r\n        <div className=\"p-d-flex p-ai-center\" style={{ width: \"40%\" }}>\r\n          <span className=\"p-d-flex p-dir-col p-text-left p-ml-3\">\r\n            {file.name}\r\n            <small>{new Date().toLocaleDateString()}</small>\r\n          </span>\r\n        </div>\r\n        <Tag\r\n          value={props.formatSize}\r\n          severity=\"warning\"\r\n          className=\"p-px-3 p-py-2\"\r\n        />\r\n        <Button\r\n          type=\"button\"\r\n          icon=\"pi pi-times\"\r\n          className=\"p-button-outlined p-button-rounded p-button-danger p-ml-auto\"\r\n          onClick={() => onTemplateRemove(file, props.onRemove)}\r\n        />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const emptyTemplate = () => {\r\n    return (\r\n      <div className=\"p-d-flex p-ai-center p-dir-col\">\r\n        <i\r\n          className=\"pi pi-file p-mt-3 p-p-5\"\r\n          style={{\r\n            fontSize: \"5em\",\r\n            borderRadius: \"50%\",\r\n            backgroundColor: \"var(--surface-b)\",\r\n            color: \"var(--surface-d)\",\r\n          }}\r\n        ></i>\r\n        <span\r\n          style={{ fontSize: \"1.2em\", color: \"var(--text-color-secondary)\" }}\r\n          className=\"p-my-5\"\r\n        >\r\n          Drag and Drop File Here\r\n        </span>\r\n      </div>\r\n    );\r\n  };\r\n  const handleUpload = (e) => {\r\n    const config = {\r\n      headers: { \"content-type\": \"multipart/form-data\" },\r\n      onUploadProgress: (data) => {\r\n        setProgress(Math.round((100 * data.loaded) / data.total));\r\n      },\r\n    };\r\n    const formData = new FormData();\r\n    formData.append(\"file\", e.files[0]);\r\n    axios\r\n      .post(\"https://fileupload.sametkeskin.repl.co/upload\", formData, config)\r\n      .then(\r\n        (res) => (\r\n          toast.current.show({\r\n            severity: \"info\",\r\n            summary: \"Success\",\r\n            detail: \"File Uploaded\",\r\n          }),\r\n          setLink(res.data.url)\r\n        )\r\n      )\r\n      .catch((err) =>\r\n        toast.current.show({\r\n          severity: \"error\",\r\n          summary: \"Error\",\r\n          detail: String(err),\r\n        })\r\n      );\r\n  };\r\n\r\n  const chooseOptions = {\r\n    icon: \"pi pi-fw pi-images\",\r\n    iconOnly: true,\r\n    className: \"custom-choose-btn p-button-rounded p-button-outlined\",\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Toast ref={toast}></Toast>\r\n\r\n      <Tooltip target=\".custom-choose-btn\" content=\"Choose\" position=\"bottom\" />\r\n\r\n      <div className=\"card\">\r\n        <FileUpload\r\n          ref={fileUploadRef}\r\n          name=\"files\"\r\n          url=\"https://fileupload.sametkeskin.repl.co/upload\"\r\n          auto={true}\r\n          customUpload\r\n          uploadHandler={handleUpload}\r\n          accept=\"*\"\r\n          maxFileSize={10000000}\r\n          onSelect={onTemplateSelect}\r\n          onError={onTemplateClear}\r\n          onClear={onTemplateClear}\r\n          headerTemplate={headerTemplate}\r\n          itemTemplate={itemTemplate}\r\n          emptyTemplate={emptyTemplate}\r\n          chooseOptions={chooseOptions}\r\n        />\r\n        {link ? (\r\n          <Button\r\n            onClick={() => {\r\n              navigator.clipboard.writeText(\r\n                `${window.location.href}download/${\r\n                  link.split(\"http://fileupload.sametkeskin.repl.co/\")[1]\r\n                }`\r\n              );\r\n              setCopyMessage(\"Link Copied!\");\r\n            }}\r\n            style={{ marginLeft: \"40%\", marginTop: \"2%\" }}\r\n          >\r\n            {copyMessage}\r\n          </Button>\r\n        ) : null}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UploadPage;\r\n","import React, { useEffect } from \"react\";\r\nimport { Button } from \"primereact/button\";\r\nimport { Tag } from \"primereact/tag\";\r\nimport axios from \"axios\";\r\nimport { useParams } from \"react-router\";\r\nimport { useState } from \"react\";\r\nimport FileDownload from \"js-file-download\";\r\n\r\nconst DownloadPage = () => {\r\n  const file_name = useParams();\r\n  const [data, setData] = useState([]);\r\n  useEffect(() => {\r\n    axios\r\n      .get(\r\n        `https://fileupload.sametkeskin.repl.co/download/${file_name.file_name}`\r\n      )\r\n      .then((res) => setData(res.data))\r\n      .catch((res) => setData(1));\r\n  }, []);\r\n  const download = () => {\r\n    axios({\r\n      url: `https://fileupload.sametkeskin.repl.co/${file_name.file_name}`,\r\n      method: \"GET\",\r\n      responseType: \"blob\",\r\n    }).then((response) => {\r\n      FileDownload(response.data, file_name.file_name);\r\n    });\r\n  };\r\n\r\n  if (data === 1) {\r\n    return <div>Böyle bir dosya yok.</div>;\r\n  } else {\r\n    return (\r\n      <div\r\n        className=\"p-d-flex p-ai-center p-flex-wrap\"\r\n        style={{ width: \"60%\", marginLeft: \"20%\" }}\r\n      >\r\n        <div className=\"p-d-flex p-ai-center\" style={{ width: \"40%\" }}>\r\n          <span className=\"p-d-flex p-dir-col p-text-left p-ml-3\">\r\n            {data.name}\r\n          </span>\r\n        </div>\r\n        <Tag value={data.size} severity=\"warning\" className=\"p-px-3 p-py-2\" />\r\n        <Button\r\n          type=\"button\"\r\n          icon=\"pi pi-download\"\r\n          className=\"p-button-outlined p-button-rounded p-button-primary p-ml-auto\"\r\n          onClick={download}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default DownloadPage;\r\n","import React from \"react\";\nimport UploadPage from \"./components/UploadPage\";\nimport \"./App.css\";\nimport DownloadPage from \"./components/DownloadPage\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nconst App = () => {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path={\"/download/:file_name\"} component={DownloadPage} />\n        <Route exact path={\"/\"} component={UploadPage} />\n      </Switch>\n    </Router>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}